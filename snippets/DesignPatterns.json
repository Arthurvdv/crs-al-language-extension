{
    "Snippet (CRS): Method Codeunit (No UI)": {
        "description": "Snippet (CRS): Method Codeunit (No UI)",
        "prefix": "tcodeunit (CRS: Method - No UI)",
        "body": [
            "codeunit ${1:id} \"${2:Name} Meth\"",
            "{",
            "\tprocedure ${3:MethodName}();",
            "\tvar",
            "\t\tHandled : Boolean;",
            "\tbegin",
            "\t\tOnBefore${3:MethodName}(Handled);",
            "",
            "\t\tDo${3:MethodName}(Handled);",
            "",
            "\t\tOnAfter${3:MethodName}();",
            "\tend;",
            "",
            "\tlocal procedure Do${3:MethodName}(var Handled: Boolean);",
            "\tbegin",
            "\t\tIF Handled THEN",
            "\t\t\tEXIT;",
            "",
            "\tend;",
            "",
            "\t[IntegrationEvent(false, false)]",
            "\tlocal procedure OnBefore${3:MethodName}(var Handled : Boolean);",
            "\tbegin",
            "\tend;",
            "",
            "\t[IntegrationEvent(false, false)]",
            "\tlocal procedure OnAfter${3:MethodName}();",
            "\tbegin",
            "\tend;",
            "}"
        ]
    },
    "Snippet (CRS): Enable Assisted Setup ": {
        "description": "Snippet (CRS): Enable Assisted Setup",
        "prefix": "tassistedsetup (CRS)",
        "body": [
            "[EventSubscriber(ObjectType::Table, Database::\"Aggregated Assisted Setup\", 'OnRegisterAssistedSetup', '', false, false)]",
            "local procedure AddExtensionAssistedSetup_OnRegisterAssistedSetup(var TempAggregatedAssistedSetup: Record \"Aggregated Assisted Setup\" TEMPORARY);",
            "var",
            "\tAssistedSetupRecord: Record ${1:\"TableName\"};",
            "begin",
            "\tTempAggregatedAssistedSetup.AddExtensionAssistedSetup(Page::${2:\"PageName\"},",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t'${3:Text in Assisted Setup List}',",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\tTrue,",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\tAssistedSetupRecord.RecordId(),",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\tGetAssistedSetupStatus(TempAggregatedAssistedSetup),",
            "\t\t\t\t\t\t\t\t\t\t\t\t\t\t'');",
            "end;",
            "[EventSubscriber(ObjectType::Table, Database::\"Aggregated Assisted Setup\", 'OnUpdateAssistedSetupStatus', '', false, false)]",
            "local procedure AggregatedAssistedSetup_OnUpdateAssistedSetupStatus(var TempAggregatedAssistedSetup: Record \"Aggregated Assisted Setup\" TEMPORARY);",
            "begin",
            "\tTempAggregatedAssistedSetup.SetStatus(TempAggregatedAssistedSetup, PAGE::${2:\"PageName\"}, GetAssistedSetupStatus(TempAggregatedAssistedSetup));",
            "end;",
            "local procedure GetAssistedSetupStatus(AggregatedAssistedSetup: Record \"Aggregated Assisted Setup\"): Integer;",
            "var",
            "\tAssistedSetupRecord: Record ${1:\"TableName\"};",
            "begin",
            "\tWITH AggregatedAssistedSetup DO BEGIN",
            "\t\tIF AssistedSetupRecord.Get() THEN",
            "\t\t\tStatus := Status::Completed",
            "\t\tELSE",
            "\t\t\tStatus := Status::\"Not Completed\";",
            "\t\tEXIT(Status);",
            "\tEND;",
            "end;"
        ]
    },
    "Snippet (CRS): Enable My Notifications ": {
        "description": "Snippet (CRS): Enable My Notifications",
        "prefix": "tmynotifications (CRS)",
        "body": [
            "local procedure GetMyNotificationID(): Guid",
            "begin",
            "\tEXIT('${1:The guid of the notification}');",
            "end;",
            "",
            "[EventSubscriber(ObjectType::Page, Page:: \"My Notifications\", 'OnInitializingNotificationWithDefaultState', '', false, false)]",
            "local procedure \"MyNotifications.OnInitializingNotificationWithDefaultState\"()",
            "var",
            "\tMyNotifications: Record \"My Notifications\";",
            "\t${2:NotificationName}: label '${3:Notification Name}', maxlength = 128, locked = true;",
            "\t${4:DescriptionText}: label '${5:Description Text}', locked = true;",
            "begin",
            "\tMyNotifications.InsertDefaultWithTableNum(GetMyNotificationID(),",
            "\t\t\t\t\t\t\t\t\t\t\t${2:NotificationName},",
            "\t\t\t\t\t\t\t\t\t\t\t${4:DescriptionText},",
            "\t\t\t\t\t\t\t\t\t\t\tDatabase::${6:TableName});",
            "end;",
            "",
            "//Do the following to check whether the notification needs to be sent:",
            "//declare a local variable: \"MyNotifications\" ",
            "//IF NOT MyNotifications.IsEnabledForRecord(GetMyNotificationID,\"${6:TableName}\") THEN EXIT;"
        ]
    },
    "Snippet (CRS): Enable Service Connection": {
        "description": "Snippet (CRS): Enable Service Connection",
        "prefix": "tserviceconnection (CRS)",
        "body": [
            "[EventSubscriber(ObjectType::Table, Database:: \"Service Connection\", 'OnRegisterServiceConnection', '',false, false)]",
            "local procedure AddSetup_OnRegisterServiceConnection(var ServiceConnection: Record \"Service Connection\")",
            "var",
            "\tSetupRec: Record ${1:SetupRecord};",
            "\tServiceName: Label '${2:ServiceName}', locked = true;",
            "\tHostName: Label '${3:HostName}', locked = true;",
            "begin",
            "\tServiceConnection.InsertServiceConnection(ServiceConnection,",
            "\t\t\t\t\t\t\t\t\t\t\tSetupRec.RecordId(),",
            "\t\t\t\t\t\t\t\t\t\t\tServiceName,",
            "\t\t\t\t\t\t\t\t\t\t\tHostName,",
            "\t\t\t\t\t\t\t\t\t\t\tPage::${4:SetupPage});",
            "end;"
        ]
    },
    "Snippet (CRS): Create Setup Table": {
        "description": "Snippet (CRS): Create Setup Table",
        "prefix": "ttablesetup (CRS)",
		"body": [
			"table ${1:id} \"${2:MyTable} Setup\"",
			"{\r",
			"\r",
			"    fields\r",
			"    {\r",
			"        field(1;\"Primary Key\"; Code[10])\r",
			"        {\r",
			"\r",
			"        }\r",
			"\r",
			"        //You might want to add fields here",
			"\r",
			"    }\r",
			"\r",
			"    keys\r",
			"    {\r",
			"        key(PK; \"Primary Key\")\r",
			"        {\r",
			"            Clustered = true;\r",
			"        }\r",
			"    }\r",
			"\r",
			"    procedure InsertIfNotExists()\r",
			"    var\r",
			"    begin\r",
			"        Reset();\r",
			"        if not Get() then \r",
			"        begin\r",
			"            Init();\r",
			"            Insert(true);\r",
			"        end;\r",
			"    end;\r",
			"\r",
			"\r",
			"}"
		]
	},
	"Snippet (CRS): Create Setup Page": {
		"prefix": "tpagesetup (CRS)",
		"body": [
			"page ${1:Id} \"${2:PageName} Setup\"",
			"{",
			"    ",
			"    PageType = Card;",
			"    SourceTable = ${3:\"TableName\"};",
			"    Caption = '${2:PageName}';",
			"    InsertAllowed = false;",
			"    DeleteAllowed = false;",
			"    UsageCategory = Administration;",
			"",
			"    ",
			"    layout",
			"    {",
			"        area(content)",
			"        {",
			"            group(General)",
			"            {",
			"                //You might want to add fields here",
			"            }",
			"        }",
			"    }",
			"",
			"    trigger OnOpenPage()",
			"    begin",
			"        InsertIfNotExists();",
			"    end;",
			"    ",
			"}",
			""
		],
		"description": "Snippet (CRS): Create Setup Page"
    },
    "Snippet (CRS): Create Headline Page": {
		"prefix": "tpageheadline (CRS)",
		"body": [
			"page ${1:Id} \"Headline RC ${2:AppName}\"\r",
			"{\r",
			"    PageType = HeadlinePart;\r",
			"    RefreshOnActivate = true;\r",
			"\r",
			"    layout\r",
			"    {\r",
			"        area(content)\r",
			"        {\r",
			"            group(\"${2:AppName} Headline\")\r",
			"            {\r",
			"                Visible = ${2:AppName}HeadlineVisible;\r",
			"                ShowCaption = false;\r",
			"                Editable = false;\r",
			"\r",
			"                field(${3:FirstInsight}; ${3:FirstInsight}Text)\r",
			"                {\r",
			"                    ApplicationArea = Basic, Suite;\r",
			"                    trigger OnDrillDown();\r",
			"                    var\r",
			"                    begin\r",
			"                        OnDrillDown${3:FirstInsight}();\r",
			"                    end;\r",
			"\r",
			"                }\r",
			"                field(${4:SecondInsight}; ${4:SecondInsight}Text)\r",
			"                {\r",
			"                    ApplicationArea = Basic, Suite;\r",
			"                    trigger OnDrillDown();\r",
			"                    var\r",
			"                    begin\r",
			"                        OnDrillDown${4:SecondInsight}();\r",
			"                    end;\r",
			"                }\r",
			"\r",
			"            }\r",
			"        }\r",
			"    }\r",
			"\r",
			"    var\r",
			"        [InDataSet]\r",
			"        ${2:AppName}HeadlineVisible: Boolean;\r",
			"        ${3:FirstInsight}Text: Text;\r",
			"        ${4:SecondInsight}Text: Text;\r",
			"\r",
			"    trigger OnOpenPage()\r",
			"    begin\r",
			"        HandleVisibility();\r",
			"\r",
			"        Handle${3:FirstInsight}();\r",
			"        Handle${4:SecondInsight}();\r",
			"\r",
			"        OnSetVisibility(${2:AppName}HeadlineVisible);\r",
			"    end;\r",
			"\r",
			"    local procedure HandleVisibility()\r",
			"    var\r",
			"    begin\r",
			"        ${2:AppName}HeadlineVisible := true;\r",
			"    end;\r",
			"\r",
			"    local procedure Handle${3:FirstInsight}();\r",
			"    var\r",
			"        HeadlineManagement: Codeunit \"Headline Management\";\r",
			"        PayloadText: Text;\r",
			"        QualifierText: Text;\r",
			"    begin\r",
			"        PayloadText := HeadlineManagement.Emphasize('Some text to highlight') + ' Some other text';\r",
			"        QualifierText := 'Some name of the insight';\r",
			"        HeadlineManagement.GetHeadlineText(QualifierText, PayloadText, ${3:FirstInsight}Text);\r",
			"\r",
			"    end;\r",
			"\r",
			"    local procedure Handle${4:SecondInsight}();\r",
			"    var\r",
			"        HeadlineManagement: Codeunit \"Headline Management\";\r",
			"        PayloadText: Text;\r",
			"        QualifierText: Text;\r",
			"    begin\r",
			"        PayloadText := HeadlineManagement.Emphasize('Some text to highlight') + ' Some other text';\r",
			"        QualifierText := 'Some name of the insight';\r",
			"        HeadlineManagement.GetHeadlineText(QualifierText, PayloadText, ${4:SecondInsight}Text);\r",
			"\r",
			"    end;\r",
			"\r",
			"    local procedure OnDrillDown${3:FirstInsight}();\r",
			"    var\r",
			"    begin\r",
			"\r",
			"    end;\r",
			"\r",
			"    local procedure OnDrillDown${4:SecondInsight}();\r",
			"    var\r",
			"    begin\r",
			"\r",
			"    end;\r",
			"\r",
			"    [IntegrationEvent(false, false)]\r",
			"    local procedure OnSetVisibility(var ${2:AppName}HeadlineVisible: Boolean)\r",
			"    begin\r",
			"    end;\r",
			"}"
		],
		"description": "Snippet (CRS): Create Headline Page"
    },
    "Snippet (CRS): Create Role Center Page": {
		"prefix": "tpagerolecenter (CRS)",
		"body": [
			"page ${1:Id} \"${2:AppName} Role Center\"\r",
			"{\r",
			"    PageType = RoleCenter;\r",
			"    Caption = '${2:AppName}';\r",
			"\r",
			"    layout\r",
			"    {\r",
			"        area(RoleCenter)\r",
			"        {\r",
			"            part(Headline; \"Headline RC ${2:AppName}\")\r",
			"            {\r",
			"                ApplicationArea = Basic, Suite;\r",
			"            }\r",
			"            part(Activities; \"${2:AppName} Activities\")\r",
			"            {\r",
			"                ApplicationArea = Basic, Suite;\r",
			"            }\r",
			"            part(\"Help And Chart Wrapper\"; \"Help And Chart Wrapper\")\r",
			"            {\r",
			"                ApplicationArea = Basic, Suite;\r",
			"            }\r",
			"            part(\"Report Inbox Part\"; \"Report Inbox Part\")\r",
			"            {\r",
			"                ApplicationArea = Basic, Suite;\r",
			"            }\r",
			"            part(\"Power BI Report Spinner Part\"; \"Power BI Report Spinner Part\")\r",
			"            {\r",
			"                ApplicationArea = Basic, Suite;\r",
			"            }\r",
			"        }\r",
			"    }\r",
			"\r",
			"    actions\r",
			"    {\r",
			"        area(Creation)\r",
			"        {\r",
			"            action(\"${3:AppNameDocumentCard}\")\r",
			"            {\r",
			"                RunPageMode = Create;\r",
			"                Caption = '${3:AppNameDocumentCard}';\r",
			"                ToolTip = 'Add some tooltip here';\r",
			"                Image = New;\r",
			"                RunObject = page \"${3:AppNameDocumentCard}\";\r",
			"                ApplicationArea = Basic, Suite;\r",
			"            }\r",
			"        }\r",
			"        area(Processing)\r",
			"        {\r",
			"            group(New)\r",
			"            {\r",
			"                action(\"${4:AppNameMasterData}\")\r",
			"                {\r",
			"                    RunPageMode = Create;\r",
			"                    Caption = '${4:AppNameMasterData}';\r",
			"                    ToolTip = 'Register new ${4:AppNameMasterData}';\r",
			"                    RunObject = page \"${4:AppNameMasterData} Card\";\r",
			"                    Image = DataEntry;\r",
			"                    ApplicationArea = Basic, Suite;\r",
			"                }\r",
			"            }\r",
			"            group(\"${5:AppNameSomeProcess} Group\")\r",
			"            {\r",
			"                action(\"${5:AppNameSomeProcess}\")\r",
			"                {\r",
			"                    Caption = '${5:AppNameSomeProcess}';\r",
			"                    ToolTip = '${5:AppNameSomeProcess} description';\r",
			"                    Image = Process;\r",
			"                    RunObject = Codeunit \"${5:AppNameSomeProcess}\";\r",
			"                    ApplicationArea = Basic, Suite;\r",
			"                }\r",
			"            }\r",
			"            group(\"${2:AppName} Reports\")\r",
			"            {\r",
			"                action(\"${6:AppNameSomeReport}\")\r",
			"                {\r",
			"                    Caption = '${6:AppNameSomeReport}';\r",
			"                    ToolTip = '${6:AppNameSomeReport} description';\r",
			"                    Image = Report;\r",
			"                    RunObject = report \"${6:AppNameSomeReport}\";\r",
			"                    ApplicationArea = Basic, Suite;\r",
			"                }\r",
			"            }\r",
			"        }\r",
			"        area(Reporting)\r",
			"        {\r",
			"            action(\"${6:AppNameSomeReport}\")\r",
			"            {\r",
			"                Caption = '${6:AppNameSomeReport}';\r",
			"                ToolTip = '${6:AppNameSomeReport} description';\r",
			"                Image = Report;\r",
			"                RunObject = report \"${6:AppNameSomeReport}\";\r",
			"                Promoted = true;\r",
			"                PromotedCategory = Report;\r",
			"                PromotedIsBig = true;\r",
			"                ApplicationArea = Basic, Suite;\r",
			"            }\r",
			"\r",
			"        }\r",
			"        area(Embedding)\r",
			"        {\r",
			"            action(\"${4:AppNameMasterData} List\")\r",
			"            {\r",
			"                RunObject = page \"${4:AppNameMasterData} List\";\r",
			"                ApplicationArea = Basic, Suite;\r",
			"            }\r",
			"\r",
			"        }\r",
			"        area(Sections)\r",
			"        {\r",
			"            group(Setup)\r",
			"            {\r",
			"                Caption = 'Setup';\r",
			"                ToolTip = 'Overview and change system and application settings, and manage extensions and services';\r",
			"                Image = Setup;\r",
			"\r",
			"                action(\"${2:AppName} Setup\")\r",
			"                {\r",
			"                    ToolTip = 'Setup ${2:AppName}';\r",
			"                    RunObject = Page \"${2:AppName} Setup\";\r",
			"                    ApplicationArea = Basic, Suite;\r",
			"\r",
			"                }\r",
			"\r",
			"                action(\"Assisted Setup\")\r",
			"                {\r",
			"                    ToolTip = 'Set up core functionality such as sales tax, sending documents as email, and approval workflow by running through a few pages that guide you through the information.';\r",
			"                    RunObject = Page \"Assisted Setup\";\r",
			"                    ApplicationArea = Basic, Suite;\r",
			"                }\r",
			"                action(\"Manual Setup\")\r",
			"                {\r",
			"                    ToolTip = 'Define your company policies for business departments and for general activities by filling setup windows manually.';\r",
			"                    RunObject = Page \"Business Setup\";\r",
			"                    ApplicationArea = Basic, Suite;\r",
			"                }\r",
			"                action(\"Service Connections\")\r",
			"                {\r",
			"                    ToolTip = 'Enable and configure external services, such as exchange rate updates, Microsoft Social Engagement, and electronic bank integration.';\r",
			"                    RunObject = Page \"Service Connections\";\r",
			"                    ApplicationArea = Basic, Suite;\r",
			"                }\r",
			"            }\r",
			"        }\r",
			"    }\r",
			"\r",
			"}"
		],
		"description": "Snippet (CRS): Create Role Center Page"
    },
    "Snippet (CRS): Create Role Center Activities Cue Table": {
		"prefix": "ttableactivities (CRS)",
		"body": [
			"table ${1:Id} \"${2:AppName} Activities Cue\"\r",
			"{\r",
			"    fields\r",
			"    {\r",
			"        field(1; \"Primary Key\"; Code[10])\r",
			"        {\r",
			"\r",
			"        }\r",
			"        field(10; \"Highlighted field\"; Integer)\r",
			"        {\r",
			"            Caption = 'Highlighted field';\r",
			"            FieldClass = FlowField;\r",
			"            CalcFormula = ; //Add Some Calculation Formula here\r",
			"            Editable = false;\r",
			"        }\r",
			"        field(11; \"Normal field\"; Decimal)\r",
			"        {\r",
			"            Caption = 'Normal field';\r",
			"            Editable = false;\r",
			"        }\r",
			"        field(12; \"Normal field With Drill-Down\"; Decimal)\r",
			"        {\r",
			"            Caption = 'Normal field With Drill-Down';\r",
			"            Editable = false;\r",
			"        }\r",
			"    }\r",
			"\r",
			"    keys\r",
			"    {\r",
			"        key(PK; \"Primary Key\")\r",
			"        {\r",
			"            Clustered = true;\r",
			"        }\r",
			"    }\r",
			"\r",
			"}"
		],
		"description": "Snippet (CRS): Create Role Center Activities Cue Table"
    },
    "Snippet (CRS): Create Role Center Activities Page": {
		"prefix": "tpageactivities (CRS)",
		"body": [
			"page ${1:Id} \"${2:AppName} Activities\"\r",
			"{\r",
			"    Caption = '${2:AppName} Activities';\r",
			"    PageType = CardPart;\r",
			"    RefreshOnActivate = true;\r",
			"    SourceTable = \"${2:AppName} Activities Cue\";\r",
			"    ShowFilter = false;\r",
			"\r",
			"    layout\r",
			"    {\r",
			"        area(Content)\r",
			"        {\r",
			"            cuegroup(\"Highlited Activity\")\r",
			"            {\r",
			"                CuegroupLayout = Wide;\r",
			"                field(\"Highlighted field\"; \"Highlighted field\")\r",
			"                {\r",
			"                    Caption = 'Highlighted field';\r",
			"                    ApplicationArea = Basic, Suite;\r",
			"                    DrillDownPageId = SomePage;\r",
			"                    ToolTip = 'Some tooltip';\r",
			"                }\r",
			"            }\r",
			"            cuegroup(\"Normal Activity\")\r",
			"            {\r",
			"                field(\"Normal field With Drill-Down\"; \"Normal field With Drill-Down\")\r",
			"                {\r",
			"                    Caption = 'Normal field with Drill-Down Caption';\r",
			"                    ApplicationArea = Basic, Suite;\r",
			"                    DrillDownPageId = SomePage;\r",
			"                    ToolTip = 'Some tooltip';\r",
			"                }\r",
			"\r",
			"                field(\"Normal field\"; \"Normal field\")\r",
			"                {\r",
			"                    Caption = 'Normal field Caption';\r",
			"                    ApplicationArea = Basic, Suite;\r",
			"                    ToolTip = 'Some tooltip';\r",
			"                }\r",
			"\r",
			"            }\r",
			"        }\r",
			"    }\r",
			"\r",
			"    trigger OnOpenPage()\r",
			"    begin\r",
			"        Reset();\r",
			"        If not Get() then begin\r",
			"            Init();\r",
			"            Insert();\r",
			"        end;\r",
			"\r",
			"    end;\r",
			"\r",
			"    trigger OnAfterGetRecord()\r",
			"    begin\r",
			"        CalculateCueFieldValues();\r",
			"    end;\r",
			"\r",
			"    local procedure CalculateCueFieldValues()\r",
			"    begin\r",
			"        if FIELDACTIVE(\"Normal field\") then\r",
			"            \"Normal field\" := 2 + 1 //add some calculation here for normal fields;\r",
			"    end;\r",
			"\r",
			"}"
		],
		"description": "Snippet (CRS): Create Role Center Activities Page"
	}
}